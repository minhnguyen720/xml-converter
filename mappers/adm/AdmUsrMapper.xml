<?xml version="1.0" encoding="UTF-8" ?>
<!--Converted at: Thu Oct 31 10:32:12 ICT 2019-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dou.adm.mappers.AdmUsrMapper">

    <resultMap id="AdmUsrMap" type="AdmUsrVO">
        <result property="usrId" column="USR_ID" javaType="String" />
        <result property="usrNm" column="USR_NM" javaType="String" />
        <result property="fullNm" column="FULL_NM" javaType="String" />
        <result property="usrPwd" column="USR_PWD" javaType="String" />
        <result property="comUsrDt" column="COM_USR_DT" javaType="String" />
        <result property="comUsrSx" column="COM_USR_SX" javaType="String" />
        <result property="coTelNo" column="CO_TEL_NO" javaType="String" />
        <result property="hmTelNo" column="HM_TEL_NO" javaType="String" />
        <result property="mphnNo" column="MPHN_NO" javaType="String" />
        <result property="faxNo" column="FAX_NO" javaType="String" />
        <result property="usrEml" column="USR_EML" javaType="String" />
        <result property="actFlg" column="ACT_FLG" javaType="String" />
        <result property="deltStsFlg" column="DELT_STS_FLG" javaType="String" />
        <result property="imgUrl" column="IMG_URL" javaType="String" />
        <result property="age" column="AGE" javaType="Integer" />
        <result property="ntlt" column="NTLT" javaType="String" />
        <result property="mrrStsCd" column="MRR_STS_CD" javaType="String" />
        <result property="edu" column="EDU" javaType="String" />
        <result property="hby" column="HBY" javaType="String" />
        <result property="wrkExp" column="WRK_EXP" javaType="String" />
        <result property="hmAddr" column="HM_ADDR" javaType="String" />
        <result property="spct" column="SPCT" javaType="String" />
        <result property="engLvl" column="ENG_LVL" javaType="String" />
        <result property="salyLvl" column="SALY_LVL" javaType="String" />
        <result property="prjHis" column="PRJ_HIS" javaType="String" />
        <result property="cntCd" column="CNT_CD" javaType="String" />
        <result property="ctyNm" column="CTY_NM" javaType="String" />
        <result property="isRoot" column="IS_ROOT" javaType="String" />
        <result property="brdyVal" column="BRDY_VAL" javaType="String" />
        <result property="coCd" column="CO_CD" javaType="String" />
        <result property="ctrbPntNo" column="CTRB_PNT_NO" javaType="Double" />
        <result property="perfPntNo" column="PERF_PNT_NO" javaType="Double" />
        <result property="createUser" column="cre_usr_id" />
        <result property="updateUser" column="upd_usr_id" />
        <result property="createDate" column="cre_dt" />
        <result property="updateDate" column="upd_dt" />
        <result property="usrNo" column="EMPE_NO" />
        <result property="strStartDt" column="EMPE_ST_DT" />
        <result property="locCd" column="LOC_CD" javaType="String" />
        <result property="empeTpCd" column="EMPE_TP_CD" javaType="String" />
        <result property="workMonthsNumber" column="WORK_MONTHS_NUMBER" javaType="Float" />
        <result property="workStartDay" column="WORK_START_DAY" javaType="Integer" />
        <result property="deviceToken" column="DVC_TKN_CD" javaType="String" />
        <result property="usrSkypeId" column="SKY_ID" javaType="String" />
    </resultMap>
    <select id="selectByKey" parameterType="AdmUsrVO" resultMap="AdmUsrMap">
        select 	/** AdmUsr.selectByKey */
            USR_ID,
            USR_NM,
            FULL_NM,
            CryptIT.decrypt(USR_PWD, 'SPI') AS USR_PWD,
            COM_USR_DT,
            COM_USR_SX,
            CO_TEL_NO,
            HM_TEL_NO,
            MPHN_NO,
            FAX_NO,
            USR_EML,
            ACT_FLG,
            DELT_STS_FLG,
            IMG_URL,
            AGE,
            NTLT,
            MRR_STS_CD,
            EDU,
            HBY,
            WRK_EXP,
            HM_ADDR,
            SPCT,
            ENG_LVL,
            SALY_LVL,
            PRJ_HIS,
            CNT_CD,
            CTY_NM,
            IS_ROOT,
            TO_CHAR(TO_DATE(BRDY_VAL, 'ddMMyyyy'), 'dd/MM/yyyy') BRDY_VAL,
            CO_CD,
            CTRB_PNT_NO,
            PERF_PNT_NO,
            cre_usr_id, cre_dt, upd_usr_id, upd_dt,
            EMPE_NO,
            to_char(EMPE_ST_DT,'dd/MM/yyyy') EMPE_ST_DT,
            LOC_CD,
            NVL(EMPE_TP_CD,'EXP') EMPE_TP_CD, /*BP2252 Kiet Tran*/
            MONTHS_BETWEEN(SYSDATE, EMPE_ST_DT) WORK_MONTHS_NUMBER,
            TO_NUMBER(TO_CHAR(EMPE_ST_DT, 'MM')) WORK_START_DAY,
            DVC_TKN_CD,
            SKY_ID

        from	ADM_USR
        where	1 = 1
          and		USR_ID = #{usrId}
    </select>

    <select id="selectAll" parameterType="HashMap" resultMap="AdmUsrMap">
        select 	/** AdmUsr.selectAll */
        USR_ID,
        USR_NM,
        FULL_NM,
        CryptIT.decrypt(USR_PWD, 'SPI') AS USR_PWD,
        COM_USR_DT,
        COM_USR_SX,
        CO_TEL_NO,
        HM_TEL_NO,
        MPHN_NO,
        FAX_NO,
        USR_EML,
        ACT_FLG,
        DELT_STS_FLG,
        IMG_URL,
        AGE,
        NTLT,
        MRR_STS_CD,
        EDU,
        HBY,
        WRK_EXP,
        HM_ADDR,
        SPCT,
        ENG_LVL,
        SALY_LVL,
        PRJ_HIS,
        CNT_CD,
        CTY_NM,
        IS_ROOT,
        BRDY_VAL,
        CO_CD,
        CTRB_PNT_NO,
        PERF_PNT_NO,
        cre_usr_id, cre_dt, upd_usr_id, upd_dt,
        EMPE_NO,
        to_char(EMPE_ST_DT,'DD/MM/YYYY') EMPE_ST_DT,
        LOC_CD,
        EMPE_TP_CD,
        MONTHS_BETWEEN(SYSDATE, EMPE_ST_DT) WORK_MONTHS_NUMBER,
        TO_NUMBER(TO_CHAR(EMPE_ST_DT, 'MM')) WORK_START_DAY,
        DVC_TKN_CD,
        SKY_ID
        from	ADM_USR
        where	1 = 1
        <if test="coCd != null and coCd != ''">
            and 	CO_CD = #{coCd}
        </if>
    </select>

    <insert id="insert" parameterType="AdmUsrVO">
        insert  /** AdmUsr.insert */
        into ADM_USR(
            USR_ID,
            USR_NM,
            FULL_NM,
            USR_PWD,
            COM_USR_DT,
            COM_USR_SX,
            CO_TEL_NO,
            HM_TEL_NO,
            MPHN_NO,
            FAX_NO,
            USR_EML,
            ACT_FLG,
            DELT_STS_FLG,
            IMG_URL,
            AGE,
            NTLT,
            MRR_STS_CD,
            EDU,
            HBY,
            WRK_EXP,
            HM_ADDR,
            SPCT,
            ENG_LVL,
            SALY_LVL,
            PRJ_HIS,
            CNT_CD,
            CTY_NM,
            IS_ROOT,
            BRDY_VAL,
            CO_CD,
            CTRB_PNT_NO,
            PERF_PNT_NO,
            cre_usr_id, cre_dt, upd_usr_id, upd_dt,
            EMPE_NO,
            EMPE_ST_DT,
            ADD_PRBTN_VAC_FLG,
            LOC_CD,
            EMPE_TP_CD,
            SKY_ID
        )
        values(
                  #{usrId},
                  #{usrNm},
                  #{fullNm},
                  CryptIT.encrypt(#{usrPwd}, 'SPI'),
                  #{comUsrDt},
                  #{comUsrSx},
                  #{coTelNo},
                  #{hmTelNo},
                  #{mphnNo},
                  #{faxNo},
                  #{usrEml},
                  #{actFlg},
                  #{deltStsFlg},
                  #{imgUrl},
                  #{age},
                  #{ntlt},
                  #{mrrStsCd},
                  #{edu},
                  #{hby},
                  #{wrkExp},
                  #{hmAddr},
                  #{spct},
                  #{engLvl},
                  #{salyLvl},
                  #{prjHis},
                  #{cntCd},
                  #{ctyNm},
                  #{isRoot},
                  #{brdyVal},
                  #{coCd},
                  #{ctrbPntNo},
                  #{perfPntNo},
                  #{createUser}, sysdate, #{updateUser}, sysdate,
                  #{usrNo},
                  to_date(#{strStartDt},'YYYYMMDD'),
                  'N',
                  #{locCd},
                  #{empeTpCd},
                  #{usrSkypeId}
              )
    </insert>

    <update id="update" parameterType="AdmUsrVO">
        update  /** AdmUsr.update */
            ADM_USR set
                        USR_ID = #{usrId},
                        USR_NM = #{usrNm},
                        FULL_NM = #{fullNm},
                        USR_PWD = CryptIT.encrypt(#{usrPwd}, 'SPI'),
                        COM_USR_DT = #{comUsrDt},
                        COM_USR_SX = #{comUsrSx},
                        CO_TEL_NO = #{coTelNo},
                        HM_TEL_NO = #{hmTelNo},
                        MPHN_NO = #{mphnNo},
                        FAX_NO = #{faxNo},
                        USR_EML = #{usrEml},
                        ACT_FLG = #{actFlg},
                        DELT_STS_FLG = #{deltStsFlg},
                        IMG_URL = #{imgUrl},
                        AGE = #{age},
                        NTLT = #{ntlt},
                        MRR_STS_CD = #{mrrStsCd},
                        EDU = #{edu},
                        HBY = #{hby},
                        WRK_EXP = #{wrkExp},
                        HM_ADDR = #{hmAddr},
                        SPCT = #{spct},
                        ENG_LVL = #{engLvl},
                        SALY_LVL = #{salyLvl},
                        PRJ_HIS = #{prjHis},
                        CNT_CD = #{cntCd},
                        CTY_NM = #{ctyNm},
                        IS_ROOT = #{isRoot},
                        BRDY_VAL = #{brdyVal},
                        CO_CD = #{coCd},
                        CTRB_PNT_NO = #{ctrbPntNo},
                        PERF_PNT_NO = #{perfPntNo},
                        LOC_CD = #{locCd},
                        EMPE_TP_CD = #{empeTpCd},
                        upd_usr_id = #{updateUser},
                        upd_dt = sysdate,
                        SKY_ID = #{usrSkypeId}
        where	1 = 1
          and		USR_ID = #{usrId}
    </update>

    <update id="updateWithMap" parameterType="hashMap">
        update  /** AdmUsr.updateWithMap */
        ADM_USR set
        <if test="usrId != null and usrId != ''">
            USR_ID = #{usrId},
        </if>
        <if test="usrNm != null and usrNm != ''">
            USR_NM = #{usrNm},
        </if>
        <if test="fullNm != null and fullNm != ''">
            FULL_NM = #{fullNm},
        </if>
        <if test="usrPwd != null and usrPwd != ''">
            USR_PWD = CryptIT.encrypt(#{usrPwd}, 'SPI'),
        </if>
        <if test="comUsrDt != null and comUsrDt != ''">
            COM_USR_DT = #{comUsrDt},
        </if>
        <if test="comUsrSx != null and comUsrSx != ''">
            COM_USR_SX = #{comUsrSx},
        </if>
        <if test="coTelNo != null and coTelNo != ''">
            CO_TEL_NO = #{coTelNo},
        </if>
        <if test="hmTelNo != null and hmTelNo != ''">
            HM_TEL_NO = #{hmTelNo},
        </if>
        <if test="mphnNo != null and mphnNo != ''">
            MPHN_NO = #{mphnNo},
        </if>
        <if test="faxNo != null and faxNo != ''">
            FAX_NO = #{faxNo},
        </if>
        <if test="usrEml != null and usrEml != ''">
            USR_EML = #{usrEml},
        </if>
        <if test="actFlg != null and actFlg != ''">
            ACT_FLG = #{actFlg},
        </if>
        <if test="deltStsFlg != null and deltStsFlg != ''">
            DELT_STS_FLG = #{deltStsFlg},
        </if>
        <if test="imgUrl != null and imgUrl != ''">
            IMG_URL = #{imgUrl},
        </if>
        <if test="age != null and age != ''">
            AGE = #{age},
        </if>
        <if test="ntlt != null and ntlt != ''">
            NTLT = #{ntlt},
        </if>
        <if test="mrrStsCd != null and mrrStsCd != ''">
            MRR_STS_CD = #{mrrStsCd},
        </if>
        <if test="edu != null and edu != ''">
            EDU = #{edu},
        </if>
        <if test="hby != null and hby != ''">
            HBY = #{hby},
        </if>
        <if test="wrkExp != null and wrkExp != ''">
            WRK_EXP = #{wrkExp},
        </if>
        <if test="hmAddr != null and hmAddr != ''">
            HM_ADDR = #{hmAddr},
        </if>
        <if test="spct != null and spct != ''">
            SPCT = #{spct},
        </if>
        <if test="engLvl != null and engLvl != ''">
            ENG_LVL = #{engLvl},
        </if>
        <if test="salyLvl != null and salyLvl != ''">
            SALY_LVL = #{salyLvl},
        </if>
        <if test="prjHis != null and prjHis != ''">
            PRJ_HIS = #{prjHis},
        </if>
        <if test="cntCd != null and cntCd != ''">
            CNT_CD = #{cntCd},
        </if>
        <if test="ctyNm != null and ctyNm != ''">
            CTY_NM = #{ctyNm},
        </if>
        <if test="isRoot != null and isRoot != ''">
            IS_ROOT = #{isRoot},
        </if>
        <if test="brdyVal != null and brdyVal != ''">
            BRDY_VAL = #{brdyVal},
        </if>
        <if test="coCd != null and coCd != ''">
            CO_CD = #{coCd},
        </if>
        <if test="ctrbPntNo != null and ctrbPntNo != ''">
            CTRB_PNT_NO = #{ctrbPntNo},
        </if>
        <if test="perfPntNo != null and perfPntNo != ''">
            PERF_PNT_NO = #{perfPntNo},
        </if>
        <if test="locCd != null and locCd != ''">
            LOC_CD = #{locCd},
        </if>
        <if test="empeTpCd != null and empeTpCd != ''">
            EMPE_TP_CD = #{empeTpCd},
        </if>
        <if test="usrSkypeId != null and usrSkypeId != ''">
            SKY_ID = #{usrSkypeId},
        </if>
        upd_usr_id = #{updateUser},
        upd_dt = sysdate,
        EMPE_NO = #{usrNo},
        EMPE_ST_DT = to_date(#{strStartDt},'YYYYMMDD')
        where	1 = 1
        and		USR_ID = #{usrId}
    </update>

    <delete id="delete" parameterType="AdmUsrVO">
        delete  /** AdmUsr.delete */
            ADM_USR
        where	1 = 1
          and		USR_ID = #{usrId}
    </delete>

    <update id="updateTeam">
        UPDATE /**AdmUsr.updateTeam*/
        ADM_TEAM_USR
        SET
        APRO_OWNR_FLG = #{ownerFlg},
        UPD_USR_ID = #{updateUser},
        UPD_DT = sysdate
        WHERE
        USR_ID = #{usrId}
        <if test="teamId != null">
            <if test="teamId != null and teamId != ''">
                AND TEAM_ID = #{teamId}
            </if>
        </if>
    </update>

    <resultMap id="AdmLocMap" type="AdmLocVO">
        <result property="locCd" column="LOC_CD" javaType="String" />
        <result property="cntCd" column="CNT_CD" javaType="String" />
        <result property="locNm" column="LOC_NM" javaType="String" />
        <result property="gmtVal" column="GMT_VAL" javaType="String" />
    </resultMap>
    <select id="selectLocation" resultMap="AdmLocMap">
        /**AdmUsr.selectLocation*/
        SELECT	LOC_CD,
                  CNT_CD,
                  LOC_NM,
                  GMT_VAL
        FROM	ADM_LOC
        WHERE	1 = 1
          AND		DELT_FLG = 'N'
    </select>

    <resultMap id="AdmUsrMap2" type="AdmUsrVO">
        <result property="usrId" column="USR_ID" javaType="String" />
        <result property="usrNm" column="USR_NM" javaType="String" />
        <result property="usrEml" column="USR_EML" javaType="String" />
    </resultMap>
    <select id="selectHrList" parameterType="AdmUsrVO" resultMap="AdmUsrMap2">
        select 	/** AdmUsr.selectHrList */
            usr.USR_ID,
            usr.USR_NM,
            usr.USR_EML
        from	ADM_USR usr, ADM_USR_ROLE aur
        where	1 = 1
          and		usr.USR_ID = aur.USR_ID
          and		aur.ROLE_ID = 'RID20141202000000004'
    </select>

    <select id="selectProjectLead" parameterType="hashMap" resultMap="AdmUsrMap2">
        SELECT 	/** AdmUsr.selectProjectLead */
            USR.USR_ID,
            USR.USR_NM,
            USR.USR_EML
        FROM	ADM_PJT PJT
           , ADM_USR USR
        WHERE	1 = 1
          AND		USR.USR_ID = PJT.MGR_ID
          AND		PJT.PJT_ID = #{pjtId}
    </select>

    <select id="selectTpcTpCd" parameterType="hashMap" resultType="String">
        /** AdmUsr.selectProjectLead */
        SELECT TPC_ID
        FROM PIM_TPC TPC, ADM_PJT PJT
        WHERE TPC.TPC_NM = PJT.PJT_NM
          AND PJT.PJT_ID = #{pjtId}
          AND ROWNUM = 1
    </select>

	<resultMap type="AdmTeamVO" id="teamMap">
		<result property="userId"  column="USR_ID" javaType="String"/>
		<result property="teamId"  column="TEAM_ID" javaType="String"/>
		<result property="teamNm"  column="TEAM_NM" javaType="String"/>
	</resultMap>
    <select id="selectUsrMainTeam" resultMap="teamMap">
        SELECT
        /**UserManagement.selectUsrMainTeam*/
        TEAM.TEAM_ID,
        TUSR.USR_ID,
        TEAM_NM
        FROM ADM_TEAM_USR TUSR,
        ADM_TEAM TEAM
        WHERE
        TEAM.TEAM_ID = TUSR.TEAM_ID
        AND TUSR.USR_ID = #{usrId}
        AND APRO_OWNR_FLG = 'Y'
	</select>

    <select id="getProfileByFullName" resultMap="AdmUsrMap" parameterType="String">
		select 	/** AdmUsr.selectByKey */
				USR_ID,
				USR_NM,
				FULL_NM,
				'' USR_PWD,
				COM_USR_DT,
				COM_USR_SX,
				CO_TEL_NO,
				HM_TEL_NO,
				MPHN_NO,
				FAX_NO,
				USR_EML,
				ACT_FLG,
				DELT_STS_FLG,
				IMG_URL,
				AGE,
				NTLT,
				MRR_STS_CD,
				EDU,
				HBY,
				WRK_EXP,
				HM_ADDR,
				SPCT,
				ENG_LVL,
				'' SALY_LVL,
				PRJ_HIS,
				SKY_ID,
				CNT_CD,
				CTY_NM,
				IS_ROOT,
				TO_CHAR(TO_DATE(BRDY_VAL, 'ddMMyyyy'), 'dd/MM/yyyy') BRDY_VAL,
				CO_CD,
				CTRB_PNT_NO,
				PERF_PNT_NO,
				cre_usr_id, cre_dt, upd_usr_id, upd_dt,
				EMPE_NO,
				to_char(EMPE_ST_DT,'dd/MM/yyyy') EMPE_ST_DT,
				LOC_CD,
				NVL(EMPE_TP_CD,'EXP') EMPE_TP_CD,
        		MONTHS_BETWEEN(SYSDATE, EMPE_ST_DT) WORK_MONTHS_NUMBER,
        		TO_NUMBER(TO_CHAR(EMPE_ST_DT, 'MM')) WORK_START_DAY,
        		(SELECT TEAM_NM
				FROM ADM_TEAM_USR TUSR, ADM_TEAM TEAM
				WHERE TEAM.TEAM_ID = TUSR.TEAM_ID
					AND TUSR.USR_ID = ADMUSER.USR_ID
					AND APRO_OWNR_FLG = 'Y') TEAM_NM
		from	ADM_USR ADMUSER
		where	1 = 1
		and		((UPPER(FULL_NM) like '%' || Upper(#{fullname}) || '%')
				OR (UPPER(USR_NM) like '%' || Upper(#{fullname}) || '%')
				OR (UPPER(USR_ID) like '%' || Upper(#{fullname}) || '%'))
		and ACT_FLG = 'Y'
		and DELT_STS_FLG = 'N'
		AND CO_CD = 'DOU'
	</select>

</mapper>