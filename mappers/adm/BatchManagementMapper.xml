<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dou.adm.mappers.BatchManagementMapper">

    <resultMap type="AdmBatchJobVO" id="AdmBatchJobVOMap">
        <result property="batchJobId" column="BAT_JB_ID" javaType="String"/>
        <result property="batchJobName" column="BAT_JB_NM" javaType="String"/>
        <result property="batchJobFileName" column="BAT_JB_FILE_NM" javaType="String"/>
        <result property="description" column="BAT_JB_DESC" javaType="String"/>
        <result property="cronEx" column="CRON_EX" javaType="String"/>
        <result property="sts" column="BAT_JB_STS_CD" javaType="String"/>
        <result property="creDate" column="CRE_DT" javaType="String"/>
        <result property="preRunTime" column="BAT_JB_ST_DT" javaType="String"/>
        <result property="dur" column="DUR" javaType="String"/>
    </resultMap>

    <select id="searchBatchJobList" resultMap="AdmBatchJobVOMap">
		/**[SQLID: sys.BatchManagement.searchBatchJobList]*/
		SELECT
			  b.bat_jb_his_seq bat_jb_his_seq,
			  a.BAT_JB_ID BAT_JB_ID,
			  a.BAT_JB_NM BAT_JB_NM,
			  a.BAT_JB_FILE_NM BAT_JB_FILE_NM,
			  a.BAT_JB_DESC BAT_JB_DESC,
			  a.cron_xpr_val cron_ex,
			  a.BAT_JB_STS_CD BAT_JB_STS_CD,
			  TO_CHAR(a.cre_dt,'dd-mm-yyyy hh24:mi:ss') CRE_DT,
			  to_char(to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss'),'dd-mm-yyyy hh24:mi:ss') BAT_JB_ST_DT,
			  (
			  	SELECT (24*60*60* extract(DAY FROM (
			          to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (60*60* extract(hour FROM (
			          to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (60 * extract(minute FROM (
			          to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (extract(SECOND FROM (
			          to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) AS "HOUR.MINUTE"
				FROM dual
			  ) DUR
		FROM 	ADM_BAT_JB a,
  				ADM_BAT_JB_HIS b
		WHERE 	1 = 1
		AND 	a.BAT_JB_ID = b.BAT_JB_ID
		and 	b.BAT_JB_HIS_SEQ in (
									select MAX(BAT_JB_HIS_SEQ)
									from ADM_BAT_JB_HIS
									where BAT_JB_ID =  a.BAT_JB_ID)
		order by a.BAT_JB_ID desc
	</select>

	<resultMap type="AdmBatchJobVO" id="AdmBatchHisVOMap">
		<result property="batchJobId" column="BAT_JB_ID" javaType="String"/>
		<result property="sts" column="BAT_JB_STS_CD" javaType="String"/>
		<result property="description" column="BAT_JB_LOG_CTNT" javaType="String"/>
		<result property="startDate" column="BAT_JB_ST_DT" javaType="String"/>
		<result property="dur" column="DUR" javaType="String"/>
		<result property="dlyHisDt" column="dlyHisDt" javaType="String"/>
	</resultMap>

	<select id="searchHistoryList" resultMap="AdmBatchHisVOMap" parameterType="HashMap">
		/*BatchManagement.searchHistoryList*/
		WITH tbl AS
		(SELECT *
		FROM
		(SELECT #{batchJobId} BAT_JB_ID,
		b.BAT_JB_STS_CD,
		TO_CHAR(b.BAT_JB_LOG_CTNT) BAT_JB_LOG_CTNT,
		TO_CHAR(to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss'),'dd-mm-yyyy hh24:mi:ss') BAT_JB_ST_DT,
		( SELECT (24*60*60* extract(DAY FROM (
		to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (60*60* extract(hour FROM (
		to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (60 * extract(minute FROM (
		to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (extract(SECOND FROM (
		to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) AS "HOUR.MINUTE"
		FROM dual
		) DUR,
		TO_CHAR(to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss'),'Mon-DD') dlyHisDt
		FROM ADM_BAT_JB_HIS b
		WHERE 1         = 1
		AND b.bat_jb_id = #{batchJobId}
		<if test="type ==  1">
			AND b.cre_dt BETWEEN (sysdate - 14) AND sysdate
		</if>
		<if test="type ==  2">
			AND b.cre_dt BETWEEN (sysdate - 30) AND sysdate
		</if>
		) k,
		<if test="type ==  1">
			(SELECT TO_CHAR(ROWNUM - 1 + (sysdate-13),'Mon-DD') dlyHisDt2
			FROM ALL_OBJECTS
			WHERE ROWNUM <![CDATA[ <= ]]> sysdate+1 - (sysdate-13)
			) C
		</if>
		<if test="type ==  2">
			(SELECT TO_CHAR(ROWNUM - 1 + (sysdate-29),'Mon-DD') dlyHisDt2
			FROM ALL_OBJECTS
			WHERE ROWNUM <![CDATA[ <= ]]> sysdate+1 - (sysdate-29)
			) C
		</if>
		WHERE 1 = 1
		AND k.dlyHisDt(+) = c.dlyHisDt2
		)
		SELECT NVL(BAT_JB_ID,#{batchJobId}) BAT_JB_ID,
		NVL(BAT_JB_STS_CD,'NOT RUN') BAT_JB_STS_CD,
		BAT_JB_LOG_CTNT,
		BAT_JB_ST_DT,
		NVL(DUR,0) DUR,
		dlyHisDt2 dlyHisDt
		FROM tbl
		where 1 = 1
		ORDER BY to_date(dlyHisDt2, 'MON-dd') desc,to_date(BAT_JB_ST_DT,'dd-mm-yyyy hh24:mi:ss') desc
	</select>

	<resultMap type="ChartBatchJobHistoryVO" id="AdmBatchChartHisVOMap">
		<result property="batchJobId" column="BAT_JB_ID" javaType="String"/>
		<result property="durarion" column="DUR" javaType="String"/>
		<result property="dlyHisDt" column="dlyHisDt" javaType="String"/>
	</resultMap>

	<select id="searchChartHistoryList" parameterType="HashMap" resultMap="AdmBatchChartHisVOMap">
		/*BatchManagement.searchChartHistoryList*/
		WITH tbl AS
		(SELECT *
		FROM
		(SELECT #{batchJobId} BAT_JB_ID,
		TO_CHAR(to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss'),'yyymmdd') BAT_JB_ST_DT,
		( SELECT (24*60*60* extract(DAY FROM (
		to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (60*60* extract(hour FROM (
		to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (60 * extract(minute FROM (
		to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) + (extract(SECOND FROM (
		to_date(b.BAT_JB_END_DT,'yyyymmddhh24miss')-to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss')) DAY(9) TO second)) AS "HOUR.MINUTE"
		FROM dual
		) DUR,
		TO_CHAR(to_date(b.BAT_JB_ST_DT,'yyyymmddhh24miss'),'Mon-DD') dlyHisDt
		FROM ADM_BAT_JB_HIS b
		WHERE 1         = 1
		AND b.bat_jb_id = #{batchJobId}
		<if test="type ==  1">
			AND b.cre_dt BETWEEN (sysdate - 14) AND sysdate
		</if>
		<if test="type ==  2">
			AND b.cre_dt BETWEEN (sysdate - 30) AND sysdate
		</if>
		) k,
		<if test="type ==  1">
			(SELECT TO_CHAR(ROWNUM - 1 + (sysdate-13),'Mon-DD') dlyHisDt2
			FROM ALL_OBJECTS
			WHERE ROWNUM <![CDATA[ <= ]]> sysdate+1 - (sysdate-13)
			) C
		</if>
		<if test="type ==  2">
			(SELECT TO_CHAR(ROWNUM - 1 + (sysdate-29),'Mon-DD') dlyHisDt2
			FROM ALL_OBJECTS
			WHERE ROWNUM <![CDATA[ <= ]]> sysdate+1 - (sysdate-29)
			) C
		</if>
		WHERE 1 = 1
		AND k.dlyHisDt(+) = c.dlyHisDt2
		)
		SELECT NVL(BAT_JB_ID,#{batchJobId}) BAT_JB_ID,
		BAT_JB_ST_DT,
		NVL(AVG(DUR),0) DUR,
		dlyHisDt2 dlyHisDt
		FROM tbl
		WHERE 1 = 1
		GROUP BY BAT_JB_ID, BAT_JB_ST_DT, dlyHisDt2
		ORDER BY to_date(dlyHisDt2, 'MON-dd')
	</select>

	<update id="updateBatchInfo" parameterType="HashMap">
		update adm_bat_jb
			set bat_jb_nm = #{batchJobName}, bat_jb_desc = #{description}
		where 1=1
			and bat_jb_id = #{batchJobId}
	</update>

	<insert id="insertBatchJobHis">
		/**[SQLID: sys.BatchManagement.insertBatchJobHis]*/
		INSERT
		INTO ADM_BAT_JB_HIS(
		BAT_JB_HIS_SEQ,
		BAT_JB_ID,

		<if test='startDate == "Y"'>
			BAT_JB_ST_DT,
		</if>
		<if test='endDate == "Y"'>
			BAT_JB_END_DT,
		</if>
		BAT_JB_STS_CD,
		<if test=" batJbLogCtnt!= null and batJbLogCtnt != ''">
			BAT_JB_LOG_CTNT,
		</if>
		CRE_DT,
		CRE_USR_ID,
		UPD_DT,
		UPD_USR_ID
		)
		VALUES(
		BAT_JB_HIS_SEQ.NEXTVAL,
		#{batchJobId},
		<if test='startDate == "Y"'>
			TO_CHAR(#{startDateVal},'YYYYMMDDHH24MISS'),
		</if>
		<if test='endDate == "Y"'>
			TO_CHAR(#{endDateVal},'YYYYMMDDHH24MISS'),
		</if>
		#{sts},
		<if test=" batJbLogCtnt!= null and batJbLogCtnt != ''">
			#{batJbLogCtnt},
		</if>
		sysdate,
		'BATCH',
		sysdate,
		'BATCH'
		)
	</insert>

	<select id="selectbatJobSeq" resultType="String" parameterType="hashMap">
		/**[SQLID: sys.BatchManagement.selectbatJobSeq]*/
		SELECT *
		FROM (	SELECT BAT_JB_HIS_SEQ
		 		FROM  ADM_BAT_JB_HIS
				WHERE TO_CHAR(CRE_DT, 'DD-MON-YYYY') = TO_CHAR(sysdate,'DD-MON-YYYY')
		  		AND BAT_JB_ID = #{batchJobId}
		  		ORDER BY BAT_JB_HIS_SEQ DESC
		     )
		WHERE ROWNUM = 1
	</select>

	<update id="updateBatchJobHis">
		/**[SQLID: sys.BatchManagement.updateBatchJobHis]*/
		UPDATE ADM_BAT_JB_HIS
   		SET BAT_JB_STS_CD = #{sts},
    		BAT_JB_END_DT = TO_CHAR(#{endDateVal},'YYYYMMDDHH24MISS'),
    		BAT_JB_LOG_CTNT = #{batJbLogCtnt}
		WHERE
			BAT_JB_HIS_SEQ = #{batchJobSeq}
		AND BAT_JB_ID = #{batchJobId}
	</update>

	<insert id="mergeBatchJob" parameterType="hashMap">
		/**[SQLID: sys.BatchManagement.mergeBatchJob]*/
		MERGE INTO ADM_BAT_JB
		USING DUAL
		ON ( BAT_JB_ID = #{batchJobId} )
		WHEN MATCHED THEN
		  UPDATE
		     SET
				 UPD_USR_ID = #{usrId}
		WHEN NOT MATCHED THEN
		  INSERT (	BAT_JB_ID,
		  			BAT_JB_NM,
					<if test="batJbFileNm != null and batJbFileNm != ''">
						BAT_JB_FILE_NM,
					</if>
		  			BAT_JB_STS_CD,
		  			<if test="batJbStDt != null and batJbStDt != ''">
						BAT_JB_ST_DT,
					</if>
		          	<if test="batJbEndDt != null and batJbEndDt != ''">
						BAT_JB_END_DT,
					</if>
					<if test="batJbDesc != null and batJbDesc != '' ">
						BAT_JB_DESC,
					</if>
					<if test="cronEx != null and cronEx != ''">
						CRON_XPR_VAL,
					</if>
		          	CRE_USR_ID,
		          	CRE_DT,
		          	UPD_USR_ID,
		          	UPD_DT
		         )
		  VALUES (	#{batchJobId},
		  			#{batJbNm},
					<if test="batJbFileNm != null and batJbFileNm != ''">
						#{batJbFileNm},
					</if>
		  			#{batJbStsCd},
		          	<if test="batJbStDt != null and batJbStDt != ''">
						#{batJbStDt},
					</if>
		          	<if test="batJbEndDt != null and batJbEndDt != '' ">
						#{batJbEndDt},
					</if>
					<if test="batJbDesc != null and batJbDesc != '' ">
						#{batJbDesc},
					</if>
					<if test="cronEx != null and cronEx != ''">
						#{cronEx},
					</if>
		          	#{usrId},
		          	sysdate,
		          	#{usrId},
		          	sysdate
		         )
	</insert>

	
</mapper>
