<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dou.adm.mappers.LocationManagementMapper">
    <resultMap type="AdmLocVO" id="AdmLoMap">
        <result property="locCd" column="LOC_CD" javaType="String"/>
        <result property="locNm" column="LOC_NM" javaType="String"/>
        <result property="gmtVal" column="GMT_VAL" javaType="String"/>
        <result property="cntNm" column="CNT_NM" javaType="String"/>
        <result property="cntCd" column="CNT_CD" javaType="String"/>
        <result property="deltFlg" column="DELT_FLG" javaType="String"/>
        <result property="locCdOld" column="LOC_CD" javaType="String"/>
        <result property="gmtCngFlg" column="GMT_CNG_FLG" javaType="String"/>
        <result property="stndGmtVal" column="STND_GMT_VAL" javaType="String"/>
		<result property="znNm" column="ZN_NM" javaType="String"/>
    </resultMap>

    <select id="selectLocationList" resultMap="AdmLoMap" parameterType="HashMap">
        /**sqlMapAdmLoc.selectLocationList*/
        SELECT L.LOC_CD
        , L.LOC_NM
        , L.GMT_VAL
        , CNT.CNT_NM
        , L.CNT_CD
        , L.DELT_FLG
        , L.GMT_CNG_FLG
        , L.STND_GMT_VAL
		, L.ZN_NM
        FROM ADM_LOC L
        , ADM_CNT CNT
        WHERE 1 = 1
        AND L.CNT_CD = CNT.CNT_CD
        <if test="deltFlg != null and deltFlg != ''">
            AND L.DELT_FLG = #{deltFlg}
        </if>
        <if test="cntNm != null and cntNm != ''">
            AND UPPER(CNT_NM) LIKE UPPER(#{cntNm}) || '%'
        </if>
    </select>


    <insert id="insertLocation">
	/** sqlMapAdmLoc.insertLocation */
	INSERT INTO ADM_LOC(
				LOC_CD,
				CNT_CD,
				LOC_NM,
				GMT_VAL,
				DELT_FLG,
				CRE_DT,
				CRE_USR_ID,
				UPD_DT,
				UPD_USR_ID,
				GMT_CNG_FLG,
				STND_GMT_VAL,
				ZN_NM
				)
		VALUES(
				TRIM(#{locCd}),
				#{cntCd},
				#{locNm},
				#{gmtVal},
				'N',
				sysdate,
				#{createUser},
				sysdate,
				#{createUser},
				#{gmtCngFlg},
				#{stndGmtVal},
				#{znNm}
				)
</insert>

    <update id="updateLocation">
	/** sqlMapAdmLoc.updateLocation */
	UPDATE  ADM_LOC
	SET     	CNT_CD 		= 	#{cntCd}
    	    ,	LOC_NM 		= 	#{locNm}
        	,	GMT_VAL 	= 	#{gmtVal}
        	,	UPD_DT 		= 	SYSDATE
        	,	UPD_USR_ID 	= 	#{updateUser}
        	,	GMT_CNG_FLG 	= 	#{gmtCngFlg}
        	,	STND_GMT_VAL 	= 	#{stndGmtVal}
			,	ZN_NM 	= 	#{znNm}
	WHERE   LOC_CD 	= #{locCdOld}
</update>

    <delete id="deleteLocation">
	/** sqlMapAdmLoc.deleteLocation */
	UPDATE  ADM_LOC
	SET     DELT_FLG 		= 	'Y'
	WHERE   LOC_CD 	= #{locCdOld}
</delete>


    <select id="selectByLocationCode" resultMap="AdmLoMap">
	/** sqlMapAdmLoc.selectByLocationCode */
	SELECT 		L.LOC_CD
			,	L.LOC_NM
			,	L.GMT_VAL
			, 	CNT.CNT_NM
			, 	L.CNT_CD
			, 	L.DELT_FLG
			,   L.GMT_CNG_FLG
			,	L.STND_GMT_VAL
	FROM 		ADM_LOC L
			, 	ADM_CNT CNT
	WHERE 	L.LOC_CD = #{locCd}
</select>

    <select id="selectByLocationChangeGMT" resultMap="AdmLoMap">
	/** sqlMapAdmLoc.selectByLocationChangeGMT */
	SELECT 		L.LOC_CD
			,	L.LOC_NM
			,	L.GMT_VAL
			, 	'' CNT_NM
			, 	L.CNT_CD
			, 	L.DELT_FLG
			,   L.GMT_CNG_FLG
			,	L.STND_GMT_VAL
	FROM 		ADM_LOC L
	WHERE 	L.GMT_CNG_FLG = 'Y'
</select>

    <update id="updateByLocationForBatJob">
	/** sqlMapAdmLoc.updateByLocationForBatJob */
	UPDATE  ADM_LOC
	SET     GMT_VAL = #{gmtVal},
			UPD_DT  = sysdate,
          	UPD_USR_ID = #{updateUser}
	WHERE   LOC_CD 	= #{locCd}
</update>

</mapper>